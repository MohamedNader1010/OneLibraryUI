Create a new file called generic-autocomplete.component.ts:

typescript
Copy code
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { FormControl } from '@angular/forms';
import { Observable } from 'rxjs';
import { startWith, map } from 'rxjs/operators';

@Component({
  selector: 'app-generic-autocomplete',
  templateUrl: './generic-autocomplete.component.html',
  styleUrls: ['./generic-autocomplete.component.css']
})
export class GenericAutocompleteComponent {
  @Input() dataSource: any[]; // Input: data source array
  @Output() selectedId = new EventEmitter<number>(); // Output: selected ID

  nameControl = new FormControl();

  filteredData$: Observable<any[]> = this.nameControl.valueChanges
    .pipe(
      startWith(''),
      map(value => this._filter(value))
    );

  private _filter(value: string): any[] {
    const filterValue = value.toLowerCase();
    return this.dataSource.filter(item => item.name.toLowerCase().includes(filterValue));
  }

  displayFn(item: any): string {
    return item ? item.name : '';
  }

  getItemId(item: any): void {
    this.selectedId.emit(item ? item.id : null);
  }
}
-------------------------------------------------------------------------------------------
Create a new file called generic-autocomplete.component.html:
html
Copy code
<mat-autocomplete #auto="matAutocomplete" [displayWith]="displayFn" (optionSelected)="getItemId($event.option.value)">
  <mat-option *ngFor="let item of filteredData$ | async" [value]="item">
    {{item.name}}
  </mat-option>
</mat-autocomplete>

<mat-form-field>
  <input matInput [formControl]="nameControl" [matAutocomplete]="auto" placeholder="Name">
</mat-form-field>

---------------------------------------------------------------------------------------------------------------------------------------------
In your app.component.html file:

html
Copy code
<app-generic-autocomplete [dataSource]="dataArray" (selectedId)="onSelectedId($event)"></app-generic-autocomplete>

<!-- Display the selected item's ID -->
<p>Selected ID: {{selectedId}}</p>
In your app.component.ts file:

typescript
Copy code
import { Component } from '@angular/core';

const dataArray = [
  { id: 1, name: 'John' },
  { id: 2, name: 'Alice' },
  { id: 3, name: 'Bob' },
  // ... more objects
];

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  selectedId: number;

  onSelectedId(id: number): void {
    this.selectedId = id;
  }
}
